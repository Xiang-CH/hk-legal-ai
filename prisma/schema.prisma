// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  output   = "../src/prisma/client"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "sqlserver"
  url = env("DATABASE_URL")
}

model ClicPage {
  id Int @id @default(autoincrement())
  nid Int // page_nid
  title String
  content String @db.NVarChar(max)
  topic String
  languageCode String
  url String
  path String
  contextualInformation String @db.NVarChar(max)
  lastUpdatedAt DateTime @updatedAt

  referencingPages ClicPage[] @relation("ClicPageRelationToClicPage")
  referencedByPages ClicPage[] @relation("ClicPageRelationToClicPage")
  referencingLegislationSections LegislationSection[]
  referencingLegislationCaps LegislationCap[]
  referencingJudgments Judgment[]

  @@unique([nid, languageCode])
  @@index([nid, languageCode])
}

model LegislationSection {
  id Int @id  @default(autoincrement())
  path String // cap_no/section_no or cap_no/section_no/subsection_no
  parentLegislationCap LegislationCap @relation("ParentCap", fields: [capNumber, languageCode], references: [capNumber, languageCode], onDelete: NoAction, onUpdate: NoAction)

  capNumber String
  sectionHeading String?
  sectionNumber String
  subsectionNumber String?
  content String @db.NVarChar(max)
  languageCode String
  url String
  eLegislationUrl String?

  referencedByClicPages ClicPage[]
  referencingLegislationSections LegislationSection[] @relation("LegislationSectionToLegislationSection")
  referencedByLegislationSections LegislationSection[] @relation("LegislationSectionToLegislationSection")
  referencingLegislationCaps LegislationCap[] @relation("LegislationSectionToLegislationCap")
  referencedByJudgments Judgment[]
  relatedInterpretations Interpretation[]

  @@unique([id, languageCode])
  @@index([capNumber, sectionNumber, subsectionNumber, languageCode])
}

model LegislationCap {
  id Int @id @default(autoincrement())
  capNumber String
  title String?
  longTitle String? @db.NVarChar(max)
  languageCode String
  url String
  eLegislationUrl String?
  updatedAt DateTime @updatedAt

  childSections LegislationSection[] @relation("ParentCap")
  referencedByLegislationSections LegislationSection[] @relation("LegislationSectionToLegislationCap")
  referencedByJudgments Judgment[]
  relatedInterpretations Interpretation[]
  referencedByClicPages ClicPage[]

  @@unique([capNumber, languageCode])
  @@index([capNumber, languageCode])
}


model Interpretation {
  id Int @id @default(autoincrement())
  term String
  termDefinition String @db.NVarChar(max)
  languageCode String
  
  parentLegislationCap LegislationCap @relation(fields: [capNumber, languageCode], references: [capNumber, languageCode], onDelete: NoAction, onUpdate: NoAction)
  capNumber String
  sectionsContainingTerm LegislationSection[]

  @@index([capNumber, term, languageCode])
}

model Judgment {
  id Int @id
  neutralCitation String
  courtName String
  year Int
  number Int
  date DateTime
  languageCode String
  isTranslation Boolean
  coram String
  parties String
  representations String?
  charges String?
  remarks String?
  summary String?
  legalrefUrl String
  url String
  citationIndex Int?

  cases Case[]
  referencedByClicPages ClicPage[]
  referencingLegislationSections LegislationSection[]
  referencingLegislationCaps LegislationCap[]
  referencingJudgments Judgment[] @relation("JudgmentToJudgment")
  referencedByJudgments Judgment[] @relation("JudgmentToJudgment")
}

model Case {
  id Int @id
  caseAct String
  year Int
  number Int
  title String
  cjrId Int
  cjrDis Int

  judgment Judgment @relation(fields: [judgmentId], references: [id])
  judgmentId Int
} 